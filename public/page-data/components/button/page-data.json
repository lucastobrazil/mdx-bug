{"componentChunkName":"component---src-templates-layout-with-sidebar-js","path":"/components/button/","webpackCompilationHash":"","result":{"data":{"mdx":{"frontmatter":{"title":"Button","subTitle":"Empower users to perform key actions","component":"Button"},"fields":{"slug":"/components/button/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Button\",\n  \"subTitle\": \"Empower users to perform key actions\",\n  \"component\": \"Button\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Types\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"<Box display=\\\"flex\\\" flexWrap=\\\"wrap\\\" justifyContent=\\\"space-around\\\" width=\\\"100%\\\">\\n    <Button>Default</Button>\\n    <Button variant=\\\"primary\\\">Primary</Button>\\n    <Button variant=\\\"outline\\\">Outline</Button>\\n    <Button variant=\\\"transparent\\\">Transparent</Button>\\n    <Button variant=\\\"destructive\\\">Destructive</Button>\\n</Box>\\n\")), mdx(\"h1\", null, \"Size Variations\"), mdx(\"h2\", null, \"Small\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"<Box display=\\\"flex\\\" flexWrap=\\\"wrap\\\" justifyContent=\\\"space-around\\\" width=\\\"100%\\\">\\n    <Button size=\\\"small\\\">Default</Button>\\n    <Button variant=\\\"primary\\\" size=\\\"small\\\">\\n        Primary\\n    </Button>\\n    <Button variant=\\\"outline\\\" size=\\\"small\\\">\\n        Outline\\n    </Button>\\n    <Button variant=\\\"transparent\\\" size=\\\"small\\\">\\n        Transparent\\n    </Button>\\n    <Button variant=\\\"destructive\\\" size=\\\"small\\\">\\n        Destructive\\n    </Button>\\n</Box>\\n\")), mdx(\"h2\", null, \"Large\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"<Box display=\\\"flex\\\" flexWrap=\\\"wrap\\\" justifyContent=\\\"space-around\\\" width=\\\"100%\\\">\\n    <Button size=\\\"large\\\">Default</Button>\\n    <Button variant=\\\"primary\\\" size=\\\"large\\\">\\n        Primary\\n    </Button>\\n    <Button variant=\\\"outline\\\" size=\\\"large\\\">\\n        Outline\\n    </Button>\\n    <Button variant=\\\"transparent\\\" size=\\\"large\\\">\\n        Transparent\\n    </Button>\\n    <Button variant=\\\"destructive\\\" size=\\\"large\\\">\\n        Destructive\\n    </Button>\\n</Box>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/components/button/"}}}